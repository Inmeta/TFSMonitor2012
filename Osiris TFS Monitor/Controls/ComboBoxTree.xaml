<UserControl x:Class="Osiris.Tfs.Monitor.ComboBoxTree"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Height="10" Width="120"
    x:Name="UserControl"
	xmlns:l="clr-namespace:Osiris.Tfs.Monitor"
    xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" 
    >

	<UserControl.Resources>

		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>

		<Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Border Name="Border" Padding="2" SnapsToDevicePixels="true">
							<ContentPresenter/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="true">
								<Setter TargetName="Border" Property="Background" Value="Red"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</UserControl.Resources>

	<ComboBox x:Name="TreeCombo" SnapsToDevicePixels="True" OverridesDefaultStyle="True" ScrollViewer.HorizontalScrollBarVisibility="Auto"
	ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" IsSynchronizedWithCurrentItem="True"
	MinWidth="120" MinHeight="10" ItemsSource="{Binding ElementName=UserControl, Path=ItemsSource}" DataContext="{Binding ElementName=UserControl, Path=DataContext}" FocusVisualStyle="{x:Null}">
		<ComboBox.Template>
			<ControlTemplate TargetType="ComboBox">
				<Grid>
					<ToggleButton Height="19" Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" 
					IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
					<ContentPresenter x:Name="Presenter" IsHitTestVisible="False" Margin="3,2,23,2" VerticalAlignment="Center" HorizontalAlignment="Left">
						<ContentPresenter.Content>
							<TextBlock Foreground="Black" TextTrimming="CharacterEllipsis" Text="{Binding Path=Text,Mode=TwoWay,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
						</ContentPresenter.Content>
					</ContentPresenter>
					<TextBox Height="19" x:Name="EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" 
					Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
					<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
						<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
							<Border x:Name="DropDownBorder" CornerRadius="2" BorderBrush="#868686" Background="#FAFAFA" BorderThickness="1"	Opacity="0.8"/>
							<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" DataContext="{Binding}">
								<TreeView Name="_treeView" ItemsSource="{Binding Path=ItemsSource, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										  MaxHeight="200" FontWeight="Normal" BorderThickness="0" KeyboardNavigation.DirectionalNavigation="Contained"
										   SelectedItemChanged="_treeView_SelectedItemChanged" Loaded="_treeView_Loaded" Background="Transparent">
									<TreeView.Resources>
										<HierarchicalDataTemplate DataType="{x:Type l:ComboBoxTreeNode}" ItemsSource="{Binding Path=Children}">
											<StackPanel Orientation="Horizontal">
												<TextBlock FontWeight="{Binding FontWeight}" Foreground="{Binding Foreground}" Text="{Binding Name}" MouseEnter="TextBlock_MouseEnter" MouseLeave="TextBlock_MouseLeave" MouseDown="TextBlock_MouseDown"/>
											</StackPanel>
										</HierarchicalDataTemplate>
									</TreeView.Resources>
								</TreeView>
							</ScrollViewer>
						</Grid>
					</Popup>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
					</Trigger>
					<Trigger Property="IsGrouping" Value="true">
						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
					</Trigger>
					<Trigger Property="IsEditable" Value="true">
						<Setter Property="IsTabStop" Value="false"/>
						<Setter TargetName="EditableTextBox" Property="Visibility"    Value="Visible"/>
						<Setter TargetName="Presenter" Property="Visibility" Value="Hidden"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</ComboBox.Template>

		<ComboBox.Resources>

			<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
				<Setter Property="Focusable" Value="False"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Grid Width="15" Height="13" Background="Transparent">
								<Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<Style x:Key="TreeViewItemFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Border>
								<Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
				<Setter Property="Background" Value="Transparent"/>
                <!--
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                -->
				<Setter Property="Padding" Value="1,0,0,0"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="19" Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
								<Border Name="Bd" BorderThickness="1" Grid.Column="1" Grid.ColumnSpan="2" Padding="2,2,2,3" Margin="-2,-2,-2,-3">
									<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
								</Border>
								<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded" Value="false">
									<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
								</Trigger>
								<Trigger Property="HasItems" Value="false">
									<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasHeader" Value="false"/>
										<Condition Property="Width" Value="Auto"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasHeader" Value="false"/>
										<Condition Property="Height" Value="Auto"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
								</MultiTrigger>
								<Trigger Property="IsSelected" Value="true">
									<Setter TargetName="Bd" Value="{DynamicResource {x:Static r:RibbonSkinResources.RibbonButtonIsMouseOverBackgroundBrushKey}}" Property="Background" />
									<Setter TargetName="Bd" Value="{DynamicResource {x:Static r:RibbonSkinResources.RibbonButtonIsMouseOverBorderBrushKey}}" Property="BorderBrush" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true"/>
										<Condition Property="IsSelectionActive" Value="false"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ComboBox.Resources>
	</ComboBox>
</UserControl>

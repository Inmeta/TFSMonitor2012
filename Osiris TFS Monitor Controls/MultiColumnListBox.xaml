<UserControl x:Class="TfsMonitor.Controls.MultiColumnListBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
			 x:Name="me" Loaded="OnLoaded" Unloaded="OnUnloaded"
			 >
    
	<UserControl.Resources>

		<Style TargetType="ListBoxItem">
			<!--
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			-->
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalContentAlignment" Value="Stretch" />
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="0"/>
			
			<!--
			<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
			<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
			<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
			-->


			<Setter Property="Template">
				<Setter.Value>
						<ControlTemplate TargetType="ListBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
						<Grid Height="{Binding ItemHeight, ElementName=me}">
							<ContentPresenter Margin="0" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						</Grid>
						
							<!--
							<ControlTemplate.Triggers>
								<Trigger Property="Selector.IsSelected">
									<Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									<Setter Property="TextElement.Foreground">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>True</s:Boolean>
									</Trigger.Value>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelected">
											<Condition.Value>
												<s:Boolean>True</s:Boolean>
											</Condition.Value>
										</Condition>
										<Condition Property="Selector.IsSelectionActive">
											<Condition.Value>
												<s:Boolean>False</s:Boolean>
											</Condition.Value>
										</Condition>
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
									<Setter Property="TextElement.Foreground">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
										</Setter.Value>
									</Setter>
								</MultiTrigger>
								<Trigger Property="UIElement.IsEnabled">
									<Setter Property="TextElement.Foreground">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>False</s:Boolean>
									</Trigger.Value>
								</Trigger>
							</ControlTemplate.Triggers>
							-->
						</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</UserControl.Resources>

	<Grid x:Name="_mainGrid"/>
    
	        
</UserControl>
